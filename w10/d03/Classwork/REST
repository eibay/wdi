Last login: Wed Oct  8 15:14:09 on ttys001
 GA General Assembly  Web Development Immersive 
------------------------------------------
git version 2.0.4
Homebrew 0.9.5
ruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-darwin13.0]
psql (PostgreSQL) 9.3.5
Rails 4.1.4
heroku-toolbelt/3.12.1 (x86_64-darwin13.0) ruby/2.1.2
------------------------------------------
type unwelcome to remove this message
eric ~/dev/wdi/rosencrantz/w10/d03/Classwork/photographer on master[!?]
$ pry
[1] Pry(main)> require 'httparty'                                                                    
[2] Pry(main)> wedding = ({title: 'Dan and Cara', category_id: 1, client_id: 4, event_date: 'June 1 2015'}).to_json le: 'Dan and Cara', category_id: 1, client_id: 4, event_date: 'June 1 2015'}).to_json

"{\"title\":\"Dan and Cara\",\"category_id\":1,\"client_id\":4,\"event_date\":\"June 1 2015\"}"
[3] Pry(main)> > HTTParty.post('http://127.0.0.1:4567/albums', wedding)                              
SyntaxError: unexpected '>', expecting end-of-input
> HTTParty.post('http://127.0.0.1:4567/albums', wedding)
 ^
[3] Pry(main)> HTTParty.post('http://127.0.0.1:4567/albums', wedding)                                
TypeError: no implicit conversion of String into Hash
from /Users/eric/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/httparty-0.13.1/lib/httparty.rb:518:in `merge'
[4] Pry(main)> wedding                                                                               
"{\"title\":\"Dan and Cara\",\"category_id\":1,\"client_id\":4,\"event_date\":\"June 1 2015\"}"
[5] Pry(main)> :body => wedding                                                                      
SyntaxError: unexpected =>, expecting end-of-input
:body => wedding
        ^
[5] Pry(main)> HTTParty.post('http://127.0.0.1:4567/albums', {body: wedding})                        
nil
[6] Pry(main)> wedding                                                                               
[7] Pry(main)> HTTParty.post('http://127.0.0.1:4567/albums', {body: wedding, headers: {content_type: 'application/json'}}).0.1:4567/albums', {body: wedding, headers: {content_type: 'application/json'}})
NoMethodError: undefined method `split' for :content_type:Symbol
[8] Pry(main)> HTTParty.post('http://127.0.0.1:4567/albums', {body: wedding, headers: {'content_type' => 'application/json'}})/albums', {body: wedding, headers: {'content_type' => 'application/json'}})
Net::ReadTimeout: Net::ReadTimeout
[9] Pry(main)> HTTParty.post('http://127.0.0.1:4567/albums', {body: wedding, headers: {'content_type' => 'application/json'}})/albums', {body: wedding, headers: {'content_type' => 'application/json'}})
nil
[10] Pry(main)> HTTParty.put('http://127.0.0.1:4567/albums/6', body: {event_date: 'July 1 2015'})    
"<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>NameError at &#x2F;albums&#x2F;6</title>\n\n  <script type=\"text/javascript\">\n  //<!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  </script>\n\n<style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n</head>\n<body>\n  <div id=\"wrap\">\n    <div id=\"header\">\n      <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n      <div id=\"summary\">\n        <h1><strong>NameError</strong> at <strong>&#x2F;albums&#x2F;6\n          </strong></h1>\n        <h2>undefined local variable or method `contact&#x27; for #&lt;Sinatra::Application:0x007f8c63cbf1f0&gt;</h2>\n        <ul>\n          <li class=\"first\"><strong>file:</strong> <code>\n            server.rb</code></li>\n          <li><strong>location:</strong> <code>block in &lt;top (required)&gt;\n            </code></li>\n          <li class=\"last\"><strong>line:\n            </strong> 32</li>\n        </ul>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n    <div id=\"backtrace\" class='condensed'>\n      <h3>BACKTRACE</h3>\n      <p><a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a></p>\n      <p id=\"nav\"><strong>JUMP TO:</strong>\n         <a href=\"#get-info\">GET</a>\n         <a href=\"#post-info\">POST</a>\n         <a href=\"#cookie-info\">COOKIES</a>\n         <a href=\"#env-info\">ENV</a>\n      </p>\n      <div class=\"clear\"></div>\n\n      <ul id=\"backtrace-ul\">\n\n      \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;dev&#x2F;wdi&#x2F;rosencrantz&#x2F;w10&#x2F;d03&#x2F;Classwork&#x2F;photographer&#x2F;server.rb</code> in\n                <code><strong>block in &lt;top (required)&gt;</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"25\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                \n                <li class=\"pre-context-line\"><code>\talbum = Album.create({title: params[&quot;title&quot;], category_id: params[&quot;category_id&quot;], client_id: params[&quot;client_id&quot;], event_date: params[&quot;event_date&quot;]})\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>put(&#x27;&#x2F;albums&#x2F;:id&#x27;) do \n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\talbum = Album.find(params[:id])\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\talbum.update(category_params(params))\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"32\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                <li class=\"context-line\" id=\"context-1\"><code>\tcontact.to_json</code></li>\n              </ol>\n\n              \n              <ol start=\"33\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>def category_params(params)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  params.slice(*Category.column_names)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1596\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1603\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                <li class=\"context-line\" id=\"context-2\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1604\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in compile!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1596\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1603\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                <li class=\"context-line\" id=\"context-3\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1604\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>[]</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                <li class=\"context-line\" id=\"context-4\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (3 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                <li class=\"context-line\" id=\"context-5\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route_eval</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"978\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_eval(&amp;pass_block) if pass_block\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_missing\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run a route block and throw :halt with the result.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route_eval\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"985\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                <li class=\"context-line\" id=\"context-6\"><code>      throw :halt, yield</code></li>\n              </ol>\n\n              \n              <ol start=\"986\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # If the current request matches pattern and conditions, fill params\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # with keys and call the given block.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Revert params afterwards.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Returns pass block.\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (2 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                <li class=\"context-line\" id=\"context-7\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"999\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      catch(:pass) do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1006\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                <li class=\"context-line\" id=\"context-8\"><code>        block ? block[self, values] : yield(self, values)</code></li>\n              </ol>\n\n              \n              <ol start=\"1007\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # No matching route was found or all routes passed. The default\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # implementation is to forward the request downstream when running\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"997\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1004\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                <li class=\"context-line\" id=\"context-9\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1005\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"997\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1004\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                <li class=\"context-line\" id=\"context-10\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1005\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"957\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"964\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                <li class=\"context-line\" id=\"context-11\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>\n              </ol>\n\n              \n              <ol start=\"965\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>each</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"956\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"963\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                <li class=\"context-line\" id=\"context-12\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"964\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"956\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"963\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                <li class=\"context-line\" id=\"context-13\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"964\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1069\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      invoke do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        filter! :before\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1076\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                <li class=\"context-line\" id=\"context-14\"><code>        route!</code></li>\n              </ol>\n\n              \n              <ol start=\"1077\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      begin\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      rescue ::Exception =&gt; boom\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                <li class=\"context-line\" id=\"context-15\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                <li class=\"context-line\" id=\"context-16\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                <li class=\"context-line\" id=\"context-17\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1066\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                \n                <li class=\"pre-context-line\"><code>        body res\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      nil # avoid double setting the same response tuple twice\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1073\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                <li class=\"context-line\" id=\"context-18\"><code>      invoke do</code></li>\n              </ol>\n\n              \n              <ol start=\"1074\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                \n                <li class=\"post-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :before\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        route!\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"891\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"898\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                <li class=\"context-line\" id=\"context-19\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"899\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                <li class=\"context-line\" id=\"context-20\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                <li class=\"context-line\" id=\"context-21\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                <li class=\"context-line\" id=\"context-22\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"891\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"898\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                <li class=\"context-line\" id=\"context-23\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"899\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"879\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template_cache = Tilt::Cache.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      yield self if block_given?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Rack call interface.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"886\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                <li class=\"context-line\" id=\"context-24\"><code>      dup.call!(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"887\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def call!(env) # :nodoc:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @env      = env\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Options:\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class XSSHeader &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                <li class=\"context-line\" id=\"context-25\"><code>        status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=\#{options[:xss_mode]}&quot; if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class PathTraversal &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"16\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                <li class=\"context-line\" id=\"context-26\"><code>        app.call env</code></li>\n              </ol>\n\n              \n              <ol start=\"17\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                \n                <li class=\"post-context-line\"><code>      ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[&quot;PATH_INFO&quot;] = path_was\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def cleanup(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to?(:encoding)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # Ruby 1.9+ M17N\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                \n                <li class=\"pre-context-line\"><code>    # Array prototype has been patched to track data. Checks the referrer\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # even on GET requests if the content type is JSON.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class JsonCsrf &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      alias react deny\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        request               = Request.new(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                <li class=\"context-line\" id=\"context-27\"><code>        status, headers, body = app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if has_vector? request, headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          warn env, &quot;attack prevented by \#{self.class}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          react(env) or [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                <li class=\"context-line\" id=\"context-28\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                <li class=\"context-line\" id=\"context-29\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options.to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"31\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                <li class=\"context-line\" id=\"context-30\"><code>        status, headers, body        = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"32\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;logger.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      logger = ::Logger.new(env[&#x27;rack.errors&#x27;])\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      logger.level = @level\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      env[&#x27;rack.logger&#x27;] = logger\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"15\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                <li class=\"context-line\" id=\"context-31\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"16\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;commonlogger.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"26\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app, logger=nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @logger = logger\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      began_at = Time.now\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"33\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                <li class=\"context-line\" id=\"context-32\"><code>      status, header, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"34\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                \n                <li class=\"post-context-line\"><code>      header = Utils::HeaderHash.new(header)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      body = BodyProxy.new(body) { log(env, status, header, began_at) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, header, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"210\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                \n                <li class=\"pre-context-line\"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    superclass.class_eval do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      alias call_without_check call unless method_defined? :call_without_check\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"217\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                <li class=\"context-line\" id=\"context-33\"><code>        call_without_check(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"218\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  class NotFound &lt; NameError #:nodoc:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def http_status; 404 end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"203\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # Behaves exactly like Rack::CommonLogger with the notable exception that it does nothing,\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # if another CommonLogger is already in the middleware chain.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  class CommonLogger &lt; Rack::CommonLogger\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"210\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                <li class=\"context-line\" id=\"context-34\"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super</code></li>\n              </ol>\n\n              \n              <ol start=\"211\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    superclass.class_eval do\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      alias call_without_check call unless method_defined? :call_without_check\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        call_without_check(env)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                \n                <li class=\"pre-context-line\"><code>  # Rack::Head returns an empty body for all HEAD requests. It leaves\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # all other requests unchanged.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"11\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                <li class=\"context-line\" id=\"context-35\"><code>    status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"12\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      body.close if body.respond_to? :close\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, headers, []]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;methodoverride.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"14\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                \n                <li class=\"pre-context-line\"><code>        method = method_override(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        if HTTP_METHODS.include?(method)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;rack.methodoverride.original_method&quot;] = env[&quot;REQUEST_METHOD&quot;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;REQUEST_METHOD&quot;] = method\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"21\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                <li class=\"context-line\" id=\"context-36\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"22\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def method_override(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      req = Request.new(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      method = req.POST[METHOD_OVERRIDE_PARAM_KEY] ||\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[HTTP_METHOD_OVERRIDE_HEADER]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      method.to_s.upcase\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"14\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app      = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template = ERB.new(TEMPLATE)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"21\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                <li class=\"context-line\" id=\"context-37\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"22\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                \n                <li class=\"post-context-line\"><code>    rescue Exception =&gt; e\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if prefers_plain_text?(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        content_type = &quot;text&#x2F;plain&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body = [dump_exception(e)]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      else\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"173\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                \n                <li class=\"pre-context-line\"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # still be able to run.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  class ExtendedRack &lt; Struct.new(:app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"180\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                <li class=\"context-line\" id=\"context-38\"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>\n              </ol>\n\n              \n              <ol start=\"181\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                \n                <li class=\"post-context-line\"><code>      return result unless callback and async?(*result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      after_response { callback.call result }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      setup_close(env, *result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      throw :async\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"2007\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def helpers\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @instance\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"2014\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                <li class=\"context-line\" id=\"context-39\"><code>      @stack.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"2015\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def inspect\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      &quot;#&lt;\#{@instance.class} app_file=\#{settings.app_file.inspect}&gt;&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1471\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1478\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                <li class=\"context-line\" id=\"context-40\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1479\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>synchronize</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1781\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @@mutex = Mutex.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        if lock?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          @@mutex.synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        else\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1788\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                <li class=\"context-line\" id=\"context-41\"><code>          yield</code></li>\n              </ol>\n\n              \n              <ol start=\"1789\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # used for deprecation warnings\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def warn(message)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        super message + &quot;\\n\\tfrom \#{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1471\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1478\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                <li class=\"context-line\" id=\"context-42\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1479\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;handler&#x2F;webrick.rb</code> in\n                <code><strong>service</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"53\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;QUERY_STRING&quot;] ||= &quot;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless env[&quot;PATH_INFO&quot;] == &quot;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          path, n = req.request_uri.path, env[&quot;SCRIPT_NAME&quot;].length\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;PATH_INFO&quot;] = path[n, path.length-n]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;REQUEST_PATH&quot;] ||= [env[&quot;SCRIPT_NAME&quot;], env[&quot;PATH_INFO&quot;]].join\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"60\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                <li class=\"context-line\" id=\"context-43\"><code>        status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"61\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                \n                <li class=\"post-context-line\"><code>        begin\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.status = status.to_i\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          headers.each { |k, vs|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            if k.downcase == &quot;set-cookie&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>              res.cookies.concat vs.split(&quot;\\n&quot;)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>              # Since WEBrick won&#x27;t accept repeated headers,\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;httpserver.rb</code> in\n                <code><strong>service</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"131\"\n                  class=\"pre-context\" id=\"pre-44\"\n                  onclick=\"toggle(44);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      servlet, options, script_name, path_info = search_servlet(req.path)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      raise HTTPStatus::NotFound, &quot;`\#{req.path}&#x27; not found.&quot; unless servlet\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      req.script_name = script_name\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      req.path_info = path_info\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      si = servlet.get_instance(self, *options)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @logger.debug(format(&quot;%s is invoked.&quot;, si.class.name))\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"138\" class=\"context\" id=\"44\"\n                  onclick=\"toggle(44);\">\n                <li class=\"context-line\" id=\"context-44\"><code>      si.service(req, res)</code></li>\n              </ol>\n\n              \n              <ol start=\"139\" class=\"post-context\"\n                  id=\"post-44\" onclick=\"toggle(44);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ##\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # The default OPTIONS request handler says GET, HEAD, POST and OPTIONS\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # requests are allowed.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def do_OPTIONS(req, res)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;httpserver.rb</code> in\n                <code><strong>run</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"87\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                \n                <li class=\"pre-context-line\"><code>          if callback = server[:RequestCallback]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            callback.call(req, res)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          elsif callback = server[:RequestHandler]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            msg = &quot;:RequestHandler is deprecated, please use :RequestCallback&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.warn(msg)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            callback.call(req, res)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"94\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                <li class=\"context-line\" id=\"context-45\"><code>          server.service(req, res)</code></li>\n              </ol>\n\n              \n              <ol start=\"95\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::EOFError, HTTPStatus::RequestTimeout =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.set_error(ex)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::Error =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error(ex.message)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.set_error(ex)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::Status =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.status = ex.code\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;server.rb</code> in\n                <code><strong>block in start_thread</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"288\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                \n                <li class=\"pre-context-line\"><code>            addr = sock.peeraddr\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.debug &quot;accept: \#{addr[3]}:\#{addr[1]}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          rescue SocketError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.debug &quot;accept: &lt;address unknown&gt;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            raise\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          call_callback(:AcceptCallback, sock)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"295\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                <li class=\"context-line\" id=\"context-46\"><code>          block ? block.call(sock) : run(sock)</code></li>\n              </ol>\n\n              \n              <ol start=\"296\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                \n                <li class=\"post-context-line\"><code>        rescue Errno::ENOTCONN\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.debug &quot;Errno::ENOTCONN raised&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue ServerError =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          msg = &quot;\#{ex.class}: \#{ex.message}\\n\\t\#{ex.backtrace[0]}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error msg\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue Exception =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error ex\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n\n      </ul>\n    </div> <!-- /BACKTRACE -->\n\n    <div id=\"get\">\n      <h3 id=\"get-info\">GET</h3>\n      \n        <p class=\"no-data\">No GET data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /GET -->\n\n    <div id=\"post\">\n      <h3 id=\"post-info\">POST</h3>\n      \n        <table class=\"req\">\n          <tr>\n            <th>Variable</th>\n            <th>Value</th>\n          </tr>\n          \n          <tr>\n            <td>event_date</td>\n            <td class=\"code\"><div>&quot;July 1 2015&quot;</div></td>\n          </tr>\n          \n        </table>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /POST -->\n\n    <div id=\"cookies\">\n      <h3 id=\"cookie-info\">COOKIES</h3>\n      \n        <p class=\"no-data\">No cookie data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /COOKIES -->\n\n    <div id=\"rack\">\n      <h3 id=\"env-info\">Rack ENV</h3>\n      <table class=\"req\">\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n         \n         <tr>\n           <td>CONTENT_LENGTH</td>\n           <td class=\"code\"><div>26</div></td>\n         </tr>\n         \n         <tr>\n           <td>CONTENT_TYPE</td>\n           <td class=\"code\"><div>application&#x2F;x-www-form-urlencoded</div></td>\n         </tr>\n         \n         <tr>\n           <td>GATEWAY_INTERFACE</td>\n           <td class=\"code\"><div>CGI&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_CONNECTION</td>\n           <td class=\"code\"><div>close</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_HOST</td>\n           <td class=\"code\"><div>127.0.0.1:4567</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_VERSION</td>\n           <td class=\"code\"><div>HTTP&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>PATH_INFO</td>\n           <td class=\"code\"><div>&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>QUERY_STRING</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>REMOTE_ADDR</td>\n           <td class=\"code\"><div>127.0.0.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>REMOTE_HOST</td>\n           <td class=\"code\"><div>localhost</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_METHOD</td>\n           <td class=\"code\"><div>PUT</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_PATH</td>\n           <td class=\"code\"><div>&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_URI</td>\n           <td class=\"code\"><div>http:&#x2F;&#x2F;127.0.0.1:4567&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>SCRIPT_NAME</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_NAME</td>\n           <td class=\"code\"><div>127.0.0.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_PORT</td>\n           <td class=\"code\"><div>4567</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_PROTOCOL</td>\n           <td class=\"code\"><div>HTTP&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_SOFTWARE</td>\n           <td class=\"code\"><div>WEBrick&#x2F;1.3.1 (Ruby&#x2F;2.1.2&#x2F;2014-05-08)</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.errors</td>\n           <td class=\"code\"><div>#&lt;Object:0x007f8c632fd298&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x007f8c63cc7238&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.logger</td>\n           <td class=\"code\"><div>#&lt;Logger:0x007f8c63cbf998 @progname=nil, @level=1, @default_formatter=#&lt;Logger::Formatter:0x007f8c63cbf948 @datetime_format=nil&gt;, @formatter=nil, @logdev=#&lt;Logger::LogDevice:0x007f8c63cbf8a8 @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&lt;IO:&lt;STDERR&gt;&gt;, @mutex=#&lt;Logger::LogDevice::LogDeviceMutex:0x007f8c63cbf880 @mon_owner=nil, @mon_count=0, @mon_mutex=#&lt;Mutex:0x007f8c63cbf830&gt;&gt;&gt;&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multiprocess</td>\n           <td class=\"code\"><div>false</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multithread</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.cookie_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_hash</td>\n           <td class=\"code\"><div>{&quot;event_date&quot;=&gt;&quot;July 1 2015&quot;}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x007f8c63cc7238&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_vars</td>\n           <td class=\"code\"><div>event_date=July%201%202015</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_string</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.run_once</td>\n           <td class=\"code\"><div>false</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.url_scheme</td>\n           <td class=\"code\"><div>http</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.version</td>\n           <td class=\"code\"><div>[1, 2]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.accept</td>\n           <td class=\"code\"><div>[#&lt;Sinatra::Request::AcceptEntry:0x007f8c65a287c8 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.commonlogger</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.error</td>\n           <td class=\"code\"><div>#&lt;NameError: undefined local variable or method `contact&#x27; for #&lt;Sinatra::Application:0x007f8c63cbf1f0&gt;&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.route</td>\n           <td class=\"code\"><div>PUT &#x2F;albums&#x2F;:id</div></td>\n         </tr>\n         \n      </table>\n      <div class=\"clear\"></div>\n    </div> <!-- /RACK ENV -->\n\n    <p id=\"explanation\">You're seeing this error because you have\nenabled the <code>show_exceptions</code> setting.</p>\n  </div> <!-- /WRAP -->\n  </body>\n</html>\n"
[11] Pry(main)> HTTParty.put('http://127.0.0.1:4567/albums/6', body: {event_date: 'July 1 2015'})    
"<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>NameError at &#x2F;albums&#x2F;6</title>\n\n  <script type=\"text/javascript\">\n  //<!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  </script>\n\n<style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n</head>\n<body>\n  <div id=\"wrap\">\n    <div id=\"header\">\n      <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n      <div id=\"summary\">\n        <h1><strong>NameError</strong> at <strong>&#x2F;albums&#x2F;6\n          </strong></h1>\n        <h2>undefined local variable or method `contact&#x27; for #&lt;Sinatra::Application:0x007f8c63b9d0d8&gt;</h2>\n        <ul>\n          <li class=\"first\"><strong>file:</strong> <code>\n            server.rb</code></li>\n          <li><strong>location:</strong> <code>block in &lt;top (required)&gt;\n            </code></li>\n          <li class=\"last\"><strong>line:\n            </strong> 32</li>\n        </ul>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n    <div id=\"backtrace\" class='condensed'>\n      <h3>BACKTRACE</h3>\n      <p><a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a></p>\n      <p id=\"nav\"><strong>JUMP TO:</strong>\n         <a href=\"#get-info\">GET</a>\n         <a href=\"#post-info\">POST</a>\n         <a href=\"#cookie-info\">COOKIES</a>\n         <a href=\"#env-info\">ENV</a>\n      </p>\n      <div class=\"clear\"></div>\n\n      <ul id=\"backtrace-ul\">\n\n      \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;dev&#x2F;wdi&#x2F;rosencrantz&#x2F;w10&#x2F;d03&#x2F;Classwork&#x2F;photographer&#x2F;server.rb</code> in\n                <code><strong>block in &lt;top (required)&gt;</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"25\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                \n                <li class=\"pre-context-line\"><code>\talbum = Album.create({title: params[&quot;title&quot;], category_id: params[&quot;category_id&quot;], client_id: params[&quot;client_id&quot;], event_date: params[&quot;event_date&quot;]})\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>put(&#x27;&#x2F;albums&#x2F;:id&#x27;) do \n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\talbum = Album.find(params[:id])\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\talbum.update(album_params(params))\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"32\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                <li class=\"context-line\" id=\"context-1\"><code>\tcontact.to_json</code></li>\n              </ol>\n\n              \n              <ol start=\"33\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>def album_params(params)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  params.slice(*Album.column_names)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1596\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1603\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                <li class=\"context-line\" id=\"context-2\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1604\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in compile!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1596\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                \n                <li class=\"pre-context-line\"><code>        method_name             = &quot;\#{verb} \#{path}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unbound_method          = generate_method(method_name, &amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        pattern, keys           = compile path\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions, @conditions = @conditions, []\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        wrapper                 = block.arity != 0 ?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1603\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                <li class=\"context-line\" id=\"context-3\"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>\n              </ol>\n\n              \n              <ol start=\"1604\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                \n                <li class=\"post-context-line\"><code>        wrapper.instance_variable_set(:@route_name, method_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [ pattern, keys, conditions, wrapper ]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def compile(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to? :to_str\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>[]</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                <li class=\"context-line\" id=\"context-4\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (3 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                <li class=\"context-line\" id=\"context-5\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route_eval</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"978\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_eval(&amp;pass_block) if pass_block\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      route_missing\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run a route block and throw :halt with the result.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route_eval\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"985\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                <li class=\"context-line\" id=\"context-6\"><code>      throw :halt, yield</code></li>\n              </ol>\n\n              \n              <ol start=\"986\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # If the current request matches pattern and conditions, fill params\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # with keys and call the given block.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Revert params afterwards.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # Returns pass block.\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block (2 levels) in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"959\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"966\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                <li class=\"context-line\" id=\"context-7\"><code>            route_eval { block[*args] }</code></li>\n              </ol>\n\n              \n              <ol start=\"967\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"999\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      catch(:pass) do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1006\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                <li class=\"context-line\" id=\"context-8\"><code>        block ? block[self, values] : yield(self, values)</code></li>\n              </ol>\n\n              \n              <ol start=\"1007\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # No matching route was found or all routes passed. The default\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # implementation is to forward the request downstream when running\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"997\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1004\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                <li class=\"context-line\" id=\"context-9\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1005\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>process_route</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"997\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                \n                <li class=\"pre-context-line\"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if values.any?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1004\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                <li class=\"context-line\" id=\"context-10\"><code>      catch(:pass) do</code></li>\n              </ol>\n\n              \n              <ol start=\"1005\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                \n                <li class=\"post-context-line\"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        block ? block[self, values] : yield(self, values)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params = original if original\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"957\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        routes.each do |pattern, keys, conditions, block|\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"964\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                <li class=\"context-line\" id=\"context-11\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>\n              </ol>\n\n              \n              <ol start=\"965\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>each</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"956\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"963\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                <li class=\"context-line\" id=\"context-12\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"964\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>route!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"956\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                \n                <li class=\"pre-context-line\"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      base.filters[type].each { |args| process_route(*args) }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run routes defined on the class and all superclasses.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def route!(base = settings, pass_block = nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      if routes = base.routes[@request.request_method]\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"963\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                <li class=\"context-line\" id=\"context-13\"><code>        routes.each do |pattern, keys, conditions, block|</code></li>\n              </ol>\n\n              \n              <ol start=\"964\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                \n                <li class=\"post-context-line\"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            route_eval { block[*args] }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # don&#x27;t wipe out pass_block in superclass\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          pass_block = returned_pass_block if returned_pass_block\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1069\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      invoke do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        filter! :before\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1076\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                <li class=\"context-line\" id=\"context-14\"><code>        route!</code></li>\n              </ol>\n\n              \n              <ol start=\"1077\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      begin\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      rescue ::Exception =&gt; boom\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                <li class=\"context-line\" id=\"context-15\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                <li class=\"context-line\" id=\"context-16\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                <li class=\"context-line\" id=\"context-17\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>dispatch!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1066\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                \n                <li class=\"pre-context-line\"><code>        body res\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      nil # avoid double setting the same response tuple twice\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Dispatch a request with error handling.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def dispatch!\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1073\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                <li class=\"context-line\" id=\"context-18\"><code>      invoke do</code></li>\n              </ol>\n\n              \n              <ol start=\"1074\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                \n                <li class=\"post-context-line\"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        filter! :before\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        route!\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    rescue ::Exception =&gt; boom\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      invoke { handle_exception!(boom) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ensure\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"891\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"898\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                <li class=\"context-line\" id=\"context-19\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"899\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                <li class=\"context-line\" id=\"context-20\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>catch</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                <li class=\"context-line\" id=\"context-21\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>invoke</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1051\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                \n                <li class=\"pre-context-line\"><code>    # Creates a Hash with indifferent access.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def indifferent_hash\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def invoke\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1058\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                <li class=\"context-line\" id=\"context-22\"><code>      res = catch(:halt) { yield }</code></li>\n              </ol>\n\n              \n              <ol start=\"1059\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                \n                <li class=\"post-context-line\"><code>      res = [res] if Fixnum === res or String === res\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if Array === res and Fixnum === res.first\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        res = res.dup\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        status(res.shift)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body(res.pop)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers(*res)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      elsif res.respond_to? :each\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call!</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"891\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                \n                <li class=\"pre-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      template_cache.clear if settings.reload_templates\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      force_encoding(@params)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @response[&#x27;Content-Type&#x27;] = nil\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"898\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                <li class=\"context-line\" id=\"context-23\"><code>      invoke { dispatch! }</code></li>\n              </ol>\n\n              \n              <ol start=\"899\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                \n                <li class=\"post-context-line\"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      unless @response[&#x27;Content-Type&#x27;]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if Array === body and body[0].respond_to? :content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type body[0].content_type\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          content_type :html\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"879\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template_cache = Tilt::Cache.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      yield self if block_given?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Rack call interface.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"886\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                <li class=\"context-line\" id=\"context-24\"><code>      dup.call!(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"887\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def call!(env) # :nodoc:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @env      = env\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @request  = Request.new(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @response = Response.new\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      @params   = indifferent_params(@request.params)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Options:\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class XSSHeader &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                <li class=\"context-line\" id=\"context-25\"><code>        status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=\#{options[:xss_mode]}&quot; if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                \n                <li class=\"pre-context-line\"><code>    #\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class PathTraversal &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"16\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                <li class=\"context-line\" id=\"context-26\"><code>        app.call env</code></li>\n              </ol>\n\n              \n              <ol start=\"17\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                \n                <li class=\"post-context-line\"><code>      ensure\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[&quot;PATH_INFO&quot;] = path_was\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def cleanup(path)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if path.respond_to?(:encoding)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          # Ruby 1.9+ M17N\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                \n                <li class=\"pre-context-line\"><code>    # Array prototype has been patched to track data. Checks the referrer\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    # even on GET requests if the content type is JSON.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    class JsonCsrf &lt; Base\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      alias react deny\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        request               = Request.new(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"18\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                <li class=\"context-line\" id=\"context-27\"><code>        status, headers, body = app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"19\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        if has_vector? request, headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          warn env, &quot;attack prevented by \#{self.class}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          react(env) or [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                <li class=\"context-line\" id=\"context-28\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"42\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless accepts? env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          instrument env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          result = react env\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"49\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                <li class=\"context-line\" id=\"context-29\"><code>        result or app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"50\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def react(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result = send(options[:reaction], env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        result if Array === result and result.size == 3\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          frame_options.to_str\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"31\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                <li class=\"context-line\" id=\"context-30\"><code>        status, headers, body        = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"32\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                \n                <li class=\"post-context-line\"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;logger.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      logger = ::Logger.new(env[&#x27;rack.errors&#x27;])\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      logger.level = @level\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      env[&#x27;rack.logger&#x27;] = logger\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"15\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                <li class=\"context-line\" id=\"context-31\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"16\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;commonlogger.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"26\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app, logger=nil)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @logger = logger\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      began_at = Time.now\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"33\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                <li class=\"context-line\" id=\"context-32\"><code>      status, header, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"34\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                \n                <li class=\"post-context-line\"><code>      header = Utils::HeaderHash.new(header)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      body = BodyProxy.new(body) { log(env, status, header, began_at) }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, header, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"210\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                \n                <li class=\"pre-context-line\"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    superclass.class_eval do\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      alias call_without_check call unless method_defined? :call_without_check\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"217\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                <li class=\"context-line\" id=\"context-33\"><code>        call_without_check(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"218\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  class NotFound &lt; NameError #:nodoc:\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def http_status; 404 end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"203\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # Behaves exactly like Rack::CommonLogger with the notable exception that it does nothing,\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # if another CommonLogger is already in the middleware chain.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  class CommonLogger &lt; Rack::CommonLogger\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"210\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                <li class=\"context-line\" id=\"context-34\"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super</code></li>\n              </ol>\n\n              \n              <ol start=\"211\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    superclass.class_eval do\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      alias call_without_check call unless method_defined? :call_without_check\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def call(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        call_without_check(env)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                \n                <li class=\"pre-context-line\"><code>  # Rack::Head returns an empty body for all HEAD requests. It leaves\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # all other requests unchanged.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    @app = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"11\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                <li class=\"context-line\" id=\"context-35\"><code>    status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"12\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      body.close if body.respond_to? :close\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, headers, []]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      [status, headers, body]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;methodoverride.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"14\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                \n                <li class=\"pre-context-line\"><code>        method = method_override(env)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        if HTTP_METHODS.include?(method)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;rack.methodoverride.original_method&quot;] = env[&quot;REQUEST_METHOD&quot;]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;REQUEST_METHOD&quot;] = method\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"21\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                <li class=\"context-line\" id=\"context-36\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"22\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def method_override(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      req = Request.new(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      method = req.POST[METHOD_OVERRIDE_PARAM_KEY] ||\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        env[HTTP_METHOD_OVERRIDE_HEADER]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      method.to_s.upcase\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"14\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def initialize(app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @app      = app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @template = ERB.new(TEMPLATE)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"21\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                <li class=\"context-line\" id=\"context-37\"><code>      @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"22\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                \n                <li class=\"post-context-line\"><code>    rescue Exception =&gt; e\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      if prefers_plain_text?(env)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        content_type = &quot;text&#x2F;plain&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        body = [dump_exception(e)]\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      else\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"173\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                \n                <li class=\"pre-context-line\"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  # still be able to run.\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>  class ExtendedRack &lt; Struct.new(:app)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"180\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                <li class=\"context-line\" id=\"context-38\"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>\n              </ol>\n\n              \n              <ol start=\"181\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                \n                <li class=\"post-context-line\"><code>      return result unless callback and async?(*result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      after_response { callback.call result }\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      setup_close(env, *result)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      throw :async\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    private\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"2007\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def helpers\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @instance\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>    def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"2014\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                <li class=\"context-line\" id=\"context-39\"><code>      @stack.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"2015\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def inspect\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      &quot;#&lt;\#{@instance.class} app_file=\#{settings.app_file.inspect}&gt;&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>  end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>block in call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1471\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1478\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                <li class=\"context-line\" id=\"context-40\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1479\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>synchronize</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1781\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @@mutex = Mutex.new\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        if lock?\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          @@mutex.synchronize(&amp;block)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        else\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1788\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                <li class=\"context-line\" id=\"context-41\"><code>          yield</code></li>\n              </ol>\n\n              \n              <ol start=\"1789\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                \n                <li class=\"post-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # used for deprecation warnings\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def warn(message)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        super message + &quot;\\n\\tfrom \#{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info framework\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.5&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                <code><strong>call</strong></code>\n            </li>\n\n            <li class=\"code framework\">\n              \n              <ol start=\"1471\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                \n                <li class=\"pre-context-line\"><code>        setup_default_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        setup_middleware builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder.run app\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        builder\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      def call(env)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"1478\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                <li class=\"context-line\" id=\"context-42\"><code>        synchronize { prototype.call(env) }</code></li>\n              </ol>\n\n              \n              <ol start=\"1479\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # Like Kernel#caller but excluding certain magic entries and without\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      def caller_files\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        cleaned_caller(1).flatten\n</code></li>\n                \n                <li class=\"post-context-line\"><code>      end\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info system\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;handler&#x2F;webrick.rb</code> in\n                <code><strong>service</strong></code>\n            </li>\n\n            <li class=\"code system\">\n              \n              <ol start=\"53\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;QUERY_STRING&quot;] ||= &quot;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        unless env[&quot;PATH_INFO&quot;] == &quot;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          path, n = req.request_uri.path, env[&quot;SCRIPT_NAME&quot;].length\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          env[&quot;PATH_INFO&quot;] = path[n, path.length-n]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>        env[&quot;REQUEST_PATH&quot;] ||= [env[&quot;SCRIPT_NAME&quot;], env[&quot;PATH_INFO&quot;]].join\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"60\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                <li class=\"context-line\" id=\"context-43\"><code>        status, headers, body = @app.call(env)</code></li>\n              </ol>\n\n              \n              <ol start=\"61\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                \n                <li class=\"post-context-line\"><code>        begin\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.status = status.to_i\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          headers.each { |k, vs|\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            if k.downcase == &quot;set-cookie&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>              res.cookies.concat vs.split(&quot;\\n&quot;)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>            else\n</code></li>\n                \n                <li class=\"post-context-line\"><code>              # Since WEBrick won&#x27;t accept repeated headers,\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;httpserver.rb</code> in\n                <code><strong>service</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"131\"\n                  class=\"pre-context\" id=\"pre-44\"\n                  onclick=\"toggle(44);\">\n                \n                <li class=\"pre-context-line\"><code>\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      servlet, options, script_name, path_info = search_servlet(req.path)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      raise HTTPStatus::NotFound, &quot;`\#{req.path}&#x27; not found.&quot; unless servlet\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      req.script_name = script_name\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      req.path_info = path_info\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      si = servlet.get_instance(self, *options)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>      @logger.debug(format(&quot;%s is invoked.&quot;, si.class.name))\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"138\" class=\"context\" id=\"44\"\n                  onclick=\"toggle(44);\">\n                <li class=\"context-line\" id=\"context-44\"><code>      si.service(req, res)</code></li>\n              </ol>\n\n              \n              <ol start=\"139\" class=\"post-context\"\n                  id=\"post-44\" onclick=\"toggle(44);\">\n                \n                <li class=\"post-context-line\"><code>    end\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    ##\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # The default OPTIONS request handler says GET, HEAD, POST and OPTIONS\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    # requests are allowed.\n</code></li>\n                \n                <li class=\"post-context-line\"><code>\n</code></li>\n                \n                <li class=\"post-context-line\"><code>    def do_OPTIONS(req, res)\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;httpserver.rb</code> in\n                <code><strong>run</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"87\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                \n                <li class=\"pre-context-line\"><code>          if callback = server[:RequestCallback]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            callback.call(req, res)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          elsif callback = server[:RequestHandler]\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            msg = &quot;:RequestHandler is deprecated, please use :RequestCallback&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.warn(msg)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            callback.call(req, res)\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          end\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"94\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                <li class=\"context-line\" id=\"context-45\"><code>          server.service(req, res)</code></li>\n              </ol>\n\n              \n              <ol start=\"95\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::EOFError, HTTPStatus::RequestTimeout =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.set_error(ex)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::Error =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error(ex.message)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.set_error(ex)\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue HTTPStatus::Status =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          res.status = ex.code\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n          \n\n            <li class=\"frame-info app\">\n              <code>&#x2F;Users&#x2F;eric&#x2F;.rbenv&#x2F;versions&#x2F;2.1.2&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;webrick&#x2F;server.rb</code> in\n                <code><strong>block in start_thread</strong></code>\n            </li>\n\n            <li class=\"code app\">\n              \n              <ol start=\"288\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                \n                <li class=\"pre-context-line\"><code>            addr = sock.peeraddr\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.debug &quot;accept: \#{addr[3]}:\#{addr[1]}&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          rescue SocketError\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            @logger.debug &quot;accept: &lt;address unknown&gt;&quot;\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>            raise\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          end\n</code></li>\n                \n                <li class=\"pre-context-line\"><code>          call_callback(:AcceptCallback, sock)\n</code></li>\n                \n              </ol>\n              \n\n              <ol start=\"295\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                <li class=\"context-line\" id=\"context-46\"><code>          block ? block.call(sock) : run(sock)</code></li>\n              </ol>\n\n              \n              <ol start=\"296\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                \n                <li class=\"post-context-line\"><code>        rescue Errno::ENOTCONN\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.debug &quot;Errno::ENOTCONN raised&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue ServerError =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          msg = &quot;\#{ex.class}: \#{ex.message}\\n\\t\#{ex.backtrace[0]}&quot;\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error msg\n</code></li>\n                \n                <li class=\"post-context-line\"><code>        rescue Exception =&gt; ex\n</code></li>\n                \n                <li class=\"post-context-line\"><code>          @logger.error ex\n</code></li>\n                \n              </ol>\n              \n              <div class=\"clear\"></div>\n            </li>\n\n          \n\n        \n      \n\n      </ul>\n    </div> <!-- /BACKTRACE -->\n\n    <div id=\"get\">\n      <h3 id=\"get-info\">GET</h3>\n      \n        <p class=\"no-data\">No GET data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /GET -->\n\n    <div id=\"post\">\n      <h3 id=\"post-info\">POST</h3>\n      \n        <table class=\"req\">\n          <tr>\n            <th>Variable</th>\n            <th>Value</th>\n          </tr>\n          \n          <tr>\n            <td>event_date</td>\n            <td class=\"code\"><div>&quot;July 1 2015&quot;</div></td>\n          </tr>\n          \n        </table>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /POST -->\n\n    <div id=\"cookies\">\n      <h3 id=\"cookie-info\">COOKIES</h3>\n      \n        <p class=\"no-data\">No cookie data.</p>\n      \n      <div class=\"clear\"></div>\n    </div> <!-- /COOKIES -->\n\n    <div id=\"rack\">\n      <h3 id=\"env-info\">Rack ENV</h3>\n      <table class=\"req\">\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n         \n         <tr>\n           <td>CONTENT_LENGTH</td>\n           <td class=\"code\"><div>26</div></td>\n         </tr>\n         \n         <tr>\n           <td>CONTENT_TYPE</td>\n           <td class=\"code\"><div>application&#x2F;x-www-form-urlencoded</div></td>\n         </tr>\n         \n         <tr>\n           <td>GATEWAY_INTERFACE</td>\n           <td class=\"code\"><div>CGI&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_CONNECTION</td>\n           <td class=\"code\"><div>close</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_HOST</td>\n           <td class=\"code\"><div>127.0.0.1:4567</div></td>\n         </tr>\n         \n         <tr>\n           <td>HTTP_VERSION</td>\n           <td class=\"code\"><div>HTTP&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>PATH_INFO</td>\n           <td class=\"code\"><div>&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>QUERY_STRING</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>REMOTE_ADDR</td>\n           <td class=\"code\"><div>127.0.0.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>REMOTE_HOST</td>\n           <td class=\"code\"><div>localhost</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_METHOD</td>\n           <td class=\"code\"><div>PUT</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_PATH</td>\n           <td class=\"code\"><div>&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>REQUEST_URI</td>\n           <td class=\"code\"><div>http:&#x2F;&#x2F;127.0.0.1:4567&#x2F;albums&#x2F;6</div></td>\n         </tr>\n         \n         <tr>\n           <td>SCRIPT_NAME</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_NAME</td>\n           <td class=\"code\"><div>127.0.0.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_PORT</td>\n           <td class=\"code\"><div>4567</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_PROTOCOL</td>\n           <td class=\"code\"><div>HTTP&#x2F;1.1</div></td>\n         </tr>\n         \n         <tr>\n           <td>SERVER_SOFTWARE</td>\n           <td class=\"code\"><div>WEBrick&#x2F;1.3.1 (Ruby&#x2F;2.1.2&#x2F;2014-05-08)</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.errors</td>\n           <td class=\"code\"><div>#&lt;Object:0x007f8c632fd298&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x007f8c63b9dbf0&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.logger</td>\n           <td class=\"code\"><div>#&lt;Logger:0x007f8c63b9d6f0 @progname=nil, @level=1, @default_formatter=#&lt;Logger::Formatter:0x007f8c63b9d6c8 @datetime_format=nil&gt;, @formatter=nil, @logdev=#&lt;Logger::LogDevice:0x007f8c63b9d678 @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&lt;IO:&lt;STDERR&gt;&gt;, @mutex=#&lt;Logger::LogDevice::LogDeviceMutex:0x007f8c63b9d650 @mon_owner=nil, @mon_count=0, @mon_mutex=#&lt;Mutex:0x007f8c63b9d600&gt;&gt;&gt;&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multiprocess</td>\n           <td class=\"code\"><div>false</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.multithread</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.cookie_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_hash</td>\n           <td class=\"code\"><div>{&quot;event_date&quot;=&gt;&quot;July 1 2015&quot;}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_input</td>\n           <td class=\"code\"><div>#&lt;StringIO:0x007f8c63b9dbf0&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.form_vars</td>\n           <td class=\"code\"><div>event_date=July%201%202015</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_hash</td>\n           <td class=\"code\"><div>{}</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.request.query_string</td>\n           <td class=\"code\"><div></div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.run_once</td>\n           <td class=\"code\"><div>false</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.url_scheme</td>\n           <td class=\"code\"><div>http</div></td>\n         </tr>\n         \n         <tr>\n           <td>rack.version</td>\n           <td class=\"code\"><div>[1, 2]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.accept</td>\n           <td class=\"code\"><div>[#&lt;Sinatra::Request::AcceptEntry:0x007f8c65b6bf18 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.commonlogger</td>\n           <td class=\"code\"><div>true</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.error</td>\n           <td class=\"code\"><div>#&lt;NameError: undefined local variable or method `contact&#x27; for #&lt;Sinatra::Application:0x007f8c63b9d0d8&gt;&gt;</div></td>\n         </tr>\n         \n         <tr>\n           <td>sinatra.route</td>\n           <td class=\"code\"><div>PUT &#x2F;albums&#x2F;:id</div></td>\n         </tr>\n         \n      </table>\n      <div class=\"clear\"></div>\n    </div> <!-- /RACK ENV -->\n\n    <p id=\"explanation\">You're seeing this error because you have\nenabled the <code>show_exceptions</code> setting.</p>\n  </div> <!-- /WRAP -->\n  </body>\n</html>\n"
[12] Pry(main)> HTTParty.delete('http://127.0.0.1:4567/albums/6')                                    
"<!DOCTYPE html>\n<html>\n<head>\n  <style type=\"text/css\">\n  body { text-align:center;font-family:helvetica,arial;font-size:22px;\n    color:#888;margin:20px}\n  #c {margin:0 auto;width:500px;text-align:left}\n  </style>\n</head>\n<body>\n  <h2>Sinatra doesn&rsquo;t know this ditty.</h2>\n  <img src='http://127.0.0.1:4567/__sinatra__/404.png'>\n  <div id=\"c\">\n    Try this:\n    <pre>delete '/albums/6' do\n  \"Hello World\"\nend\n</pre>\n  </div>\n</body>\n</html>\n"
[13] Pry(main)> HTTParty.delete('http://127.0.0.1:4567/albums/6')                                    
nil
[14] Pry(main)> HTTParty.get('http://127.0.0.1:4567/albums/1/photos')                                
"[]"
[15] Pry(main)> HTTParty.get('http://127.0.0.1:4567/albums/1/photos')                                
Net::ReadTimeout: Net::ReadTimeout
from /Users/eric/.rbenv/versions/2.1.2/lib/ruby/2.1.0/net/protocol.rb:158:in `rescue in rbuf_fill'
[16] Pry(main)> HTTParty.get('http://127.0.0.1:4567/albums/1/photos')                                
"{\"id\":1,\"title\":\"Eric \\u0026 Maria's Wedding\",\"category_id\":1,\"client_id\":1,\"event_date\":\"2012-05-26\",\"photos\":[]}"
[17] Pry(main)> HTTParty.get('http://127.0.0.1:4567/albums/3/photos')                                
"[{\"id\":1,\"album_id\":3,\"data\":null},{\"id\":2,\"album_id\":3,\"data\":null}]"
[18] Pry(main)>                                                                                      
[18] Pry(main)> !!!                                                                                  
eric ~/dev/wdi/rosencrantz/w10/d03/Classwork/photographer on master[!?]
$ git pull upstream master
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 6 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (6/6), done.
From github.com:ga-students/rosencrantz
 * branch            master     -> FETCH_HEAD
   3ff9ef9..bf2b72b  master     -> upstream/master
Performing inexact rename detection: 100% (24497/24497), done.
Merge made by the 'recursive' strategy.
 w10/d03/Homework/README.md | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 w10/d03/Homework/README.md
eric ~/dev/wdi/rosencrantz/w10/d03/Classwork/photographer on master[!?]
$ 
