Database schema:
SELECT * FROM groceries;
 id |      item       | quantity | checked (changed to strike)
----+-----------------+----------+---------


old erb rendering:
<% items.each do |i| %>
<li><%= i['item'] %>&nbsp;&nbsp;<input type='checkbox' name='check' id='<%= i['id'] %>' class='check'>&nbsp;<button class="del" id="<%= i['id'] %>">X</button></li>
<% end %>

old jquery in which event listener is created after ADD button:

  var btn = $('#add');
    var check = $('.check');
    btn.click(function(){
      var input = document.querySelector('input');
      var quantity = document.querySelector('#num');
      var grocery_item = input.value;
      var quantity = quantity.value;
      $.post('http://localhost:4567/items', {item: grocery_item, quantity: quantity, checked: false}, function(item){
        console.log(item);
        item = JSON.parse(item);
        $('ul').append("<li>"+grocery_item+"</li><button id='"+item['id']+"' class='del'>x</button>&nbsp;<input type='checkbox' id='"+item['id']+"' name='check'>");
        input.value = "";
      });
    })

deleting items with jquery + deleting from server:

var items = $('.del');
      items.click(function(){
        $.post('http://localhost:4567/delItems', this.id);
        this.parentElement.remove();
      })


 Adding strike through functionality via checkbox:

 check.click(function(){
        console.log("i'm in here.");
        console.log($(this));
        var item = $(this);
        item.parent().toggleClass("checked");
      })